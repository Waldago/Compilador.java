package lex;

public class AF {
	/*
	# -----------------------------------------------------------------------------------------------------------
	#                        === Matriz de Siguiente Estado ===
	# 
	# Matriz de siguiente estado asociada al Automata Finito. 
	# La Mariz esta completa con valores correspondientes a los siguientes estados que deber√°n transicionarse en caso de estar en un correspondiente estado.
	# 
	# # Matriz de 24x33
	#
	#   Estados:
	#       0                           - Estado Inicial
	#       -1                          - Estado Final
	#       1                           - Generar String
	#       2                           - Generar INT  
	#       3                           - =
	#       4                           - ==
	#       5                           - !
	#       6                           - !=
	#       7                           - <
	#       8                           - <=
	#       9                           - >
	#       10                          - >=
	#       11                          - +
	#       12                          - -
	#       13                          - *
	#       14                          - /
	#       15                          - // inicio comentarios
	#       16                          - // termino comentarios
	#       17                          - (
	#       18                          - )
	#       19                          - {
	#       20                          - }
	#       21                          - ;
	# -----------------------------------------------------------------------------------------------------------

	*/
	private static int [][] matrizDeEstado = {
			/*Estados	/L	/E  /{  /}  /(  /)  /;  /-  /+  //  /*  /<  />  /!  /=  /b  /eof */
			/*0*/		{  1,  2, 19, 20, 17, 18, 21, 12, 11, 14, 13,  7,  9,  5,  3,  0,  0},
			/*1*/		{  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*2*/		{ -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*3*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1},
			/*4*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*5*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1},
			/*6*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*7*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1},
			/*8*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*9*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1},
			/*10*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*11*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*12*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*13*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*14*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1},
			/*15*/		{ 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15, 15, -1},
			/*16*/		{ 15, 15, 15, 15, 15, 15, 15, 15, 15,  0, 15, 15, 15, 15, 15, 15, -1},
			/*17*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*18*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*19*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*20*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			/*21*/		{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
			};
	
	public static int estado = 0;
	
	public static int estadoAnterior = 0;
	
	public static int estadoSiguiente;
	
	
	
	public static int searchFila(int columna) {
		
		estadoSiguiente = matrizDeEstado[estado][columna];

		if (estadoSiguiente > -1) {
			estadoAnterior = estado;
			estado = estadoSiguiente;
			return estadoAnterior;
		}else {
			estadoAnterior = estado;
			estado = 0;
			return estadoAnterior;
		}
	}
	
	
	
	public static void verEstadoActual() {
		System.out.println("Estado: "+estado);
	}
	
}
